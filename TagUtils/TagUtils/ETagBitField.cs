using System.Runtime.Serialization;

namespace Impinj.TagUtils
{
    public enum ETagBitField
    {
        Unknown,
        Id,
        Range,
        [EnumMember(Value = "CRC-16")] CRC16,
        PC,
        EPC,
        [EnumMember(Value = "EPC Length")] EPCLength,
        [EnumMember(Value = "User Memory Indicator (UMI)")] UMI,
        [EnumMember(Value = "Extended Protocol Control Word 1 Present Indicator (XI)")] XI,
        [EnumMember(Value = "Numbering System Identifier Toggle (T)")] T,
        [EnumMember(Value = "Reserved for Future Use, or Application Family Identifier (RFU or AFI)")] RFU_AFI,
        [EnumMember(Value = "ISO / IEC 15963 Class Identifier")] ISO_IEC15963,
        [EnumMember(Value = "XTID Indicator (X bit)")] X,
        [EnumMember(Value = "Security Indicator (S bit)")] S,
        [EnumMember(Value = "File Indicator (F bit)")] F,
        [EnumMember(Value = "Mask Designer Identifier (MDID)")] MDID,
        [EnumMember(Value = "Tag Model Number (TMN)")] TMN,
        [EnumMember(Value = "EPC Tag Data Standard Header")] EPCTagDataStandardHeader,
        [EnumMember(Value = "Wafer Mask Revision")] WaferMaskRevision,
        [EnumMember(Value = "Integra TID Parity")] IntegraTIDParity,
        [EnumMember(Value = "Monza Serial Cycle Counter")] MonzaSerialCycleCounter,
        [EnumMember(Value = "Reserved for Future Use")] RFU,
        [EnumMember(Value = "Monza Series ID")] MonzaSeriesID,
        [EnumMember(Value = "Kill Password")] KillPassword,
        [EnumMember(Value = "Access Password")] AccessPassword,
        [EnumMember(Value = "AutoTune Disable Bit")] AutoTuneDisable,
        [EnumMember(Value = "AutoTune Value")] AutoTuneValue,
        [EnumMember(Value = "Memory Map Selection Bit")] MemoryMapSelection,
        [EnumMember(Value = "Short Range Bit")] ShortRange,
        Memory,
        Killed,
        [EnumMember(Value = "Kill Password Locked")] KillPasswordLocked,
        [EnumMember(Value = "Kill Password Permalocked")] KillPasswordPermalocked,
        [EnumMember(Value = "Access Password Locked")] AccessPasswordLocked,
        [EnumMember(Value = "Access Password Permalocked")] AccessPasswordPermalocked,
        [EnumMember(Value = "EPC Locked")] EPCLocked,
        [EnumMember(Value = "EPC Permalocked")] EPCPermalocked,
        [EnumMember(Value = "User Memory Locked")] UserMemoryLocked,
        [EnumMember(Value = "User Memory Permalocked")] UserMemoryPermalocked,
        [EnumMember(Value = "BlockPermalock Enabled")] BlockPermalockEnabled,
        [EnumMember(Value = "BlockPermalock 0")] BlockPermalockBlock0,
        [EnumMember(Value = "BlockPermalock 1")] BlockPermalockBlock1,
        [EnumMember(Value = "BlockPermalock 2")] BlockPermalockBlock2,
        [EnumMember(Value = "BlockPermalock 3")] BlockPermalockBlock3,
        [EnumMember(Value = "BlockPermalock 4")] BlockPermalockBlock4,
        [EnumMember(Value = "BlockPermalock 5")] BlockPermalockBlock5,
        [EnumMember(Value = "BlockPermalock 6")] BlockPermalockBlock6,
        [EnumMember(Value = "BlockPermalock 7")] BlockPermalockBlock7,
        [EnumMember(Value = "BlockPermalock 8")] BlockPermalockBlock8,
        [EnumMember(Value = "BlockPermalock 9")] BlockPermalockBlock9,
        [EnumMember(Value = "BlockPermalock 10")] BlockPermalockBlock10,
        [EnumMember(Value = "BlockPermalock 11")] BlockPermalockBlock11,
        [EnumMember(Value = "BlockPermalock 12")] BlockPermalockBlock12,
        [EnumMember(Value = "BlockPermalock 13")] BlockPermalockBlock13,
        [EnumMember(Value = "BlockPermalock 14")] BlockPermalockBlock14,
        [EnumMember(Value = "BlockPermalock 15")] BlockPermalockBlock15,
        [EnumMember(Value = "Block 0")] Block0,
        [EnumMember(Value = "Block 1")] Block1,
        [EnumMember(Value = "Block 2")] Block2,
        [EnumMember(Value = "Block 3")] Block3,
        [EnumMember(Value = "Block 4")] Block4,
        [EnumMember(Value = "Block 5")] Block5,
        [EnumMember(Value = "Block 6")] Block6,
        [EnumMember(Value = "Block 7")] Block7,
        [EnumMember(Value = "Block 8")] Block8,
        [EnumMember(Value = "Block 9")] Block9,
        [EnumMember(Value = "Block 10")] Block10,
        [EnumMember(Value = "Block 11")] Block11,
        [EnumMember(Value = "Block 12")] Block12,
        [EnumMember(Value = "Block 13")] Block13,
        [EnumMember(Value = "Block 14")] Block14,
        [EnumMember(Value = "Block 15")] Block15,
    }
}
